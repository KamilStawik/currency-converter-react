{"version":3,"sources":["Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","InfoSection/Timer/styled.js","InfoSection/Timer/index.js","InfoSection/styled.js","InfoSection/index.js","Form/styled.js","Form/index.js","ResultSection/styled.js","ResultSection/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","h1","theme","colors","primaryColor","requiredColor","Header","Main","main","breakPoints","mobile","Container","children","StyledTimer","span","Timer","useState","Date","currentTime","setTime","useEffect","intervalId","setInterval","clearInterval","timer","toLocaleString","weekday","day","month","hour","minute","second","Section","section","backgroundColor","List","ul","ListItem","li","InfoColorSample","borderColor","props","requiredSample","css","errorSample","invalidColor","InfoSection","StyledForm","form","Fieldset","fieldset","Legend","legend","Label","label","LabelText","AmountInput","input","Select","select","error","Button","button","Form","properRating","getNewAmountValue","getNewTargetCurrency","getNewBaseCurrency","getNewClickCounterValue","newAmountValue","setNewAmountValue","newBaseCurrency","setNewBaseCurrency","newTargetCurrency","setNewTargetCurrency","newClickCounterValue","setNewClickCounterValue","onSubmit","event","preventDefault","className","type","value","onChange","target","step","min","max","required","h2","ResultParagraph","p","ResultText","highlighted","ResultSection","calculateCurrency","amount","baseCurrency","targetCurrency","clickCounter","checkValue","setCheckValue","setTimeout","App","setAmount","setBaseCurrency","setTargetCurrency","setClickCounter","rating","filter","currencyPairRating","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1654071d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    padding: 20px;\r\n    margin-top: 0px;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <StyledHeader>Kalkulator walut</StyledHeader>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    max-width: 600px;\r\n    margin: 10px auto;\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        margin: 5px auto;\r\n        padding: 5px;\r\n    }\r\n`;","import { Main } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const StyledTimer = styled.span`\r\n    display: block;\r\n    font-family: \"Share Tech Mono\", monospace;\r\n    font-size: 14px;\r\n    text-align: right;\r\n    padding: 8px 2px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        font-size: 12;\r\n    }\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { StyledTimer } from \"./styled\";\r\n\r\nconst Timer = () => {\r\n    const [currentTime, setTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    const timer = currentTime.toLocaleString(\"pl\", {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\n    return (\r\n        <StyledTimer>Dzisiaj jest {timer} </StyledTimer>\r\n    );\r\n};\r\n\r\nexport default Timer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 2px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    padding: 8px 2px;\r\n`;\r\n\r\nexport const InfoColorSample = styled.span`\r\n    display: inline-block;\r\n    width: 100px;\r\n    border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 5px;\r\n    margin-bottom: -5px;\r\n\r\n    ${(props) => props.requiredSample && css`\r\n        background-color: ${({ theme }) => theme.colors.requiredColor};\r\n    `}\r\n\r\n    ${(props) => props.errorSample && css`\r\n        background-color: ${({ theme }) => theme.colors.invalidColor};\r\n    `}\r\n`;","import Timer from \"./Timer\";\r\nimport { Section, List, ListItem, InfoColorSample } from \"./styled\";\r\n\r\nconst InfoSection = () => {\r\n\r\n    return (\r\n        <Section>\r\n            <Timer />\r\n            <List>\r\n                <ListItem>\r\n                    Kalkulator przelicza wartość waluty po kursie średnim z dnia 24.06.2021.\r\n                </ListItem>\r\n                <ListItem>\r\n                    Pola wymagane są oznaczone kolorem żółtym:\r\n                    <InfoColorSample requiredSample></InfoColorSample>\r\n                </ListItem>\r\n                <ListItem>\r\n                    Pola błędnie wypełnione są oznaczone kolorem czerwonym:\r\n                    <InfoColorSample errorSample></InfoColorSample>\r\n                </ListItem>\r\n            </List>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default InfoSection;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    max-width: 100%;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 1px solid ${({ theme }) => (theme.colors.primaryColor)};\r\n    background-color: ${({ theme }) => (theme.colors.backgroundColor)};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n    margin: 20px 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: hsl(0, 0%, 100%);\r\n    background-color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    margin: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    max-width: 260px;\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n            max-width: fit-content;\r\n    }\r\n`;\r\n\r\nexport const AmountInput = styled.input`\r\n    max-width: 160px;\r\n    width: 100%;\r\n    border: 1px solid ${({ theme }) => (theme.colors.borderColor)};\r\n    border-radius: 5px;\r\n    padding: 6px;\r\n    margin: 0px 10px;\r\n\r\n    &:invalid {\r\n        background-color: ${({ theme }) => (theme.colors.invalidColor)};\r\n    }\r\n\r\n    &:required {\r\n        background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    max-width: 160px;\r\n    width: 100%;\r\n    border: 1px solid ${({ theme }) => (theme.colors.borderColor)};\r\n    border-radius: 5px;\r\n    padding: 3px;\r\n    margin: 0px 10px;\r\n\r\n    &:required {\r\n        background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    }\r\n\r\n    && {    \r\n        ${(props) => props.error && css`\r\n        background-color: ${({ theme }) => (theme.colors.invalidColor)};\r\n        `}\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: block;\r\n    width: 100%;\r\n    margin: 5px auto;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: hsl(0, 0%, 100%);\r\n    background-color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n        background-color: hsl(240, 100%, 35%);\r\n    }\r\n\r\n    &:active {\r\n        font-weight: bold;\r\n        background-color: hsl(240, 100%, 45%);\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport {\r\n    StyledForm,\r\n    Fieldset,\r\n    Legend,\r\n    Label,\r\n    LabelText,\r\n    AmountInput,\r\n    Select,\r\n    Button,\r\n} from \"./styled\"\r\n\r\nconst Form = ({\r\n    properRating,\r\n    getNewAmountValue,\r\n    getNewTargetCurrency,\r\n    getNewBaseCurrency,\r\n    getNewClickCounterValue\r\n}) => {\r\n\r\n    const [newAmountValue, setNewAmountValue] = useState(1.00);\r\n    const [newBaseCurrency, setNewBaseCurrency] = useState(\"PLN\");\r\n    const [newTargetCurrency, setNewTargetCurrency] = useState(\"EUR\");\r\n    const [newClickCounterValue, setNewClickCounterValue] = useState(1);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getNewAmountValue(newAmountValue);\r\n        getNewBaseCurrency(newBaseCurrency);\r\n        getNewTargetCurrency(newTargetCurrency);\r\n        setNewClickCounterValue(newClickCounterValue => newClickCounterValue + 1);\r\n        getNewClickCounterValue(newClickCounterValue);\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Fieldset>\r\n                <Legend>Przelicznik walut</Legend>\r\n                <Label>\r\n                    <LabelText>Podaj kwotę do przeliczenia:</LabelText>\r\n                    <AmountInput\r\n                        className=\"form__numberField\"\r\n                        type=\"number\"\r\n                        value={newAmountValue}\r\n                        onChange={({ target }) => setNewAmountValue(target.value)}\r\n                        step=\"0.01\"\r\n                        min=\"0.01\"\r\n                        max=\"1000000\"\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    <LabelText>Podaj walutę bazową:</LabelText>\r\n                    <Select\r\n                        error={properRating === 1 ? true : false}\r\n                        value={newBaseCurrency}\r\n                        onChange={({ target }) => setNewBaseCurrency(target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"PLN\" >PLN</option>\r\n                        <option value=\"EUR\" >EUR</option>\r\n                        <option value=\"USD\" >USD</option>\r\n                    </Select>\r\n                </Label>\r\n                <Label>\r\n                    <LabelText>Podaj walutę docelową:</LabelText>\r\n                    <Select\r\n                        error={properRating === 1 ? true : false}\r\n                        value={newTargetCurrency}\r\n                        onChange={({ target }) => setNewTargetCurrency(target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"PLN\" >PLN</option>\r\n                        <option value=\"EUR\" >EUR</option>\r\n                        <option value=\"USD\" >USD</option>\r\n                    </Select>\r\n                </Label>\r\n            </Fieldset>\r\n\r\n            <Button>Przelicz!</Button>\r\n\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: 20px auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }  \r\n`;\r\n\r\nexport const Header = styled.h2`\r\n    margin: 5px;\r\n    text-align: center;  \r\n`;\r\n\r\nexport const ResultParagraph = styled.p`\r\n    text-align: center;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const ResultText = styled.span`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: ${({ theme }) => theme.colors.primaryColor};\r\n    transition: color 0.2s linear;\r\n\r\n    && {    \r\n        ${(props) => props.highlighted && css`\r\n            color: hsl(340, 90%, 45%);\r\n        `}\r\n    }\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { Section, Header, ResultParagraph, ResultText } from \"./styled\";\r\n\r\nconst ResultSection = ({ calculateCurrency, amount, baseCurrency, targetCurrency, clickCounter }) => {\r\n\r\n    const [checkValue, setCheckValue] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCheckValue(true);\r\n        setTimeout(() => {\r\n            setCheckValue(false);\r\n        }, 1000);\r\n    }, [clickCounter]);\r\n\r\n    return (\r\n        <Section>\r\n            <Header>Wynik:</Header>\r\n            <ResultParagraph>\r\n                <ResultText highlighted={checkValue}>\r\n                    {`${amount} ${baseCurrency} = `}\r\n                </ResultText>\r\n                <ResultText highlighted={checkValue}>\r\n                    {`${calculateCurrency()} ${targetCurrency}`}\r\n                </ResultText>\r\n            </ResultParagraph>\r\n        </Section>\r\n    )\r\n};\r\n\r\nexport default ResultSection;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Container from './Container';\nimport InfoSection from './InfoSection';\nimport Form from './Form';\nimport ResultSection from './ResultSection';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    primaryColor: \"hsl(240, 100%, 25%)\",\n    backgroundColor: \"hsl(40, 100%, 97%)\",\n    invalidColor: \"hsl(0, 100%, 80%)\",\n    requiredColor: \"hsl(60, 100%, 80%)\",\n    borderColor: \"hsl(0, 0%, 53%)\",\n  },\n  breakPoints: {\n    mobile: 660,\n  },\n};\n\nfunction App() {\n\n  const [amount, setAmount] = useState(1.00);\n  const [baseCurrency, setBaseCurrency] = useState(\"PLN\");\n  const [targetCurrency, setTargetCurrency] = useState(\"EUR\");\n  const [clickCounter, setClickCounter] = useState(0);\n\n  const currencyPairRatings = [\n    { baseCurrency: \"PLN\", targetCurrency: \"EUR\", rating: 1 / 4.5302 },\n    { baseCurrency: \"EUR\", targetCurrency: \"PLN\", rating: 4.5302 },\n    { baseCurrency: \"PLN\", targetCurrency: \"USD\", rating: 1 / 3.7986 },\n    { baseCurrency: \"USD\", targetCurrency: \"PLN\", rating: 3.7986 },\n    { baseCurrency: \"USD\", targetCurrency: \"EUR\", rating: 1 / 1.1926 },\n    { baseCurrency: \"EUR\", targetCurrency: \"USD\", rating: 1.1926 },\n    { baseCurrency: \"PLN\", targetCurrency: \"PLN\", rating: 1 },\n    { baseCurrency: \"EUR\", targetCurrency: \"EUR\", rating: 1 },\n    { baseCurrency: \"USD\", targetCurrency: \"USD\", rating: 1 },\n  ];\n\n  const getNewAmountValue = (newAmountValue) => {\n    setAmount(newAmountValue);\n  };\n\n  const getNewBasetCurrency = (newBaseCurrency) => {\n    setBaseCurrency(newBaseCurrency);\n  };\n\n  const getNewTargetCurrency = (newTargetCurrency) => {\n    setTargetCurrency(newTargetCurrency);\n  };\n\n  const getNewClickCounterValue = (newClickCounterValue) => {\n    setClickCounter(newClickCounterValue);\n  };\n\n  const selectProperRating = (currencyPairRating) =>\n    (currencyPairRating.baseCurrency === baseCurrency && currencyPairRating.targetCurrency === targetCurrency);\n\n  const properRating = (currencyPairRatings.filter(selectProperRating)[0].rating);\n\n  const calculateCurrency = () => {\n    return (+amount * properRating).toFixed(2);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Container>\n        <InfoSection />\n        <Form\n          properRating={properRating}\n          getNewAmountValue={getNewAmountValue}\n          getNewTargetCurrency={getNewTargetCurrency}\n          getNewBaseCurrency={getNewBasetCurrency}\n          getNewClickCounterValue={getNewClickCounterValue}\n        />\n        <ResultSection\n          calculateCurrency={calculateCurrency}\n          amount={amount}\n          baseCurrency={baseCurrency}\n          targetCurrency={targetCurrency}\n          clickCounter={clickCounter}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}