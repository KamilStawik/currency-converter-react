{"version":3,"sources":["background.jpg","GlobalStyle.js","Header/styled.js","Header/index.js","Container/index.js","Timer/styled.js","Timer/index.js","Timer/useCurrentDate.js","InfoSection/styled.js","InfoSection/index.js","Form/styled.js","Form/index.js","ResultSection/styled.js","ResultSection/index.js","LoadingScreen/styled.js","LoadingScreen/index.js","ErrorScreen/styled.js","ErrorScreen/index.js","App.js","useCurrencyData.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","background","StyledHeader","styled","h1","theme","colors","primaryColor","requiredColor","Header","Container","main","breakPoints","mobile","StyledTimer","span","Timer","timer","useState","Date","currentDate","setTime","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","day","month","hour","minute","second","Section","section","backgroundColor","List","ul","ListItem","li","InfoColorSample","borderColor","props","requiredSample","css","InfoSection","currenciesData","date","StyledForm","form","Fieldset","fieldset","Legend","legend","Label","label","LabelText","AmountInput","input","Select","select","Button","button","Form","getNewAmountValue","getNewTargetCurrencyValue","getNewClickCounterValue","newAmountValue","setNewAmountValue","newTargetCurrency","setNewTargetCurrency","newClickCounterValue","setNewClickCounterValue","currencyList","Object","keys","rates","onSubmit","event","preventDefault","className","type","value","onChange","target","step","min","max","required","map","currency","h2","ResultParagraph","p","ResultText","highlighted","ResultSection","amount","rate","clickCounter","checkValue","setCheckValue","setTimeout","toFixed","LoadingText","LoadingScreen","ErrorText","ErrorScreen","App","status","setCurrenciesData","fetch","then","response","ok","Error","statusText","json","catch","error","console","log","useCurrencyData","setAmount","setCurrency","setClickCounter","newTargetCurrencyValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","invalidColor","document","getElementById"],"mappings":"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","file":"static/js/main.6b942876.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.098d43c6.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: \"Lato\", sans-serif;\r\n        background-image: url(${background});\r\n        background-size: cover;\r\n        background-position: center;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    padding: 20px;\r\n    margin-top: 0px;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <StyledHeader>Kalkulator walut</StyledHeader>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.main`\r\n    max-width: 600px;\r\n    margin: 10px auto;\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        margin: 5px auto;\r\n        padding: 5px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledTimer = styled.span`\r\n    display: block;\r\n    font-family: \"Share Tech Mono\", monospace;\r\n    font-size: 14px;\r\n    text-align: right;\r\n    padding: 8px 2px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        font-size: 12;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { StyledTimer } from \"./styled\";\r\n\r\nconst Timer = () => {\r\n\r\n    const currentDate = useCurrentDate();\r\n\r\n    const timer = currentDate.toLocaleString(\"pl\", {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\n    return (\r\n        <StyledTimer>Dzisiaj jest {timer} </StyledTimer>\r\n    );\r\n};\r\n\r\nexport default Timer;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n\r\n    const [currentDate, setTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return currentDate;\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 2px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    padding: 2px 5px;\r\n    margin: 5px;\r\n`;\r\n\r\nexport const Date = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const InfoColorSample = styled.span`\r\n    display: inline-block;\r\n    width: 100px;\r\n    border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 2px 5px -6px 5px;\r\n\r\n    ${(props) => props.requiredSample && css`\r\n        background-color: ${({ theme }) => theme.colors.requiredColor};\r\n    `}\r\n`;","import Timer from \"../Timer\";\r\nimport { Section, List, ListItem, Date, InfoColorSample } from \"./styled\";\r\n\r\nconst InfoSection = ({ currenciesData }) => {\r\n\r\n    return (\r\n        <Section>\r\n            <Timer />\r\n            <List>\r\n                <ListItem>\r\n                    Kursy walut pobierane są z Europejskiego Banku Centralnego.\r\n                </ListItem>\r\n                <ListItem>\r\n                    Aktualne na dzień <Date>{currenciesData.date}.</Date>\r\n                </ListItem>\r\n                <ListItem>\r\n                    Pola wymagane są oznaczone kolorem żółtym:\r\n                    <InfoColorSample requiredSample></InfoColorSample>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default InfoSection;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    max-width: 100%;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 1px solid ${({ theme }) => (theme.colors.primaryColor)};\r\n    background-color: ${({ theme }) => (theme.colors.backgroundColor)};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n    margin: 20px 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: hsl(0, 0%, 100%);\r\n    background-color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    margin: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    max-width: 260px;\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        max-width: fit-content;\r\n    }\r\n`;\r\n\r\nexport const AmountInput = styled.input`\r\n    max-width: 160px;\r\n    width: 100%;\r\n    border: 1px solid ${({ theme }) => (theme.colors.borderColor)};\r\n    border-radius: 5px;\r\n    padding: 6px;\r\n    margin: 0px 10px;\r\n\r\n    &:required {\r\n        background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    max-width: 160px;\r\n    width: 100%;\r\n    border: 1px solid ${({ theme }) => (theme.colors.borderColor)};\r\n    border-radius: 5px;\r\n    padding: 3px;\r\n    margin: 0px 10px;\r\n\r\n    &:required {\r\n        background-color: ${({ theme }) => (theme.colors.requiredColor)};\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: block;\r\n    width: 100%;\r\n    margin: 5px auto;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    color: hsl(0, 0%, 100%);\r\n    background-color: ${({ theme }) => (theme.colors.primaryColor)};\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n        background-color: hsl(240, 100%, 35%);\r\n    }\r\n\r\n    &:active {\r\n        font-weight: bold;\r\n        background-color: hsl(240, 100%, 45%);\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport {\r\n    StyledForm,\r\n    Fieldset,\r\n    Legend,\r\n    Label,\r\n    LabelText,\r\n    AmountInput,\r\n    Select,\r\n    Button,\r\n} from \"./styled\"\r\n\r\nconst Form = ({\r\n    currenciesData,\r\n    getNewAmountValue,\r\n    getNewTargetCurrencyValue,\r\n    getNewClickCounterValue,\r\n}) => {\r\n\r\n    const [newAmountValue, setNewAmountValue] = useState(1.00);\r\n    const [newTargetCurrency, setNewTargetCurrency] = useState(\"EUR\");\r\n    const [newClickCounterValue, setNewClickCounterValue] = useState(1);\r\n\r\n    let currencyList = Object.keys(currenciesData.rates)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getNewAmountValue(newAmountValue);\r\n        getNewTargetCurrencyValue(newTargetCurrency);\r\n        setNewClickCounterValue(newClickCounterValue => newClickCounterValue + 1);\r\n        getNewClickCounterValue(newClickCounterValue);\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Fieldset>\r\n                <Legend>Przelicznik walut</Legend>\r\n                <Label>\r\n                    <LabelText>Podaj kwotę w złotówkach:</LabelText>\r\n                    <AmountInput\r\n                        className=\"form__numberField\"\r\n                        type=\"number\"\r\n                        value={newAmountValue}\r\n                        onChange={({ target }) => setNewAmountValue(target.value)}\r\n                        step=\"0.01\"\r\n                        min=\"0.01\"\r\n                        max=\"1000000\"\r\n                        required\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    <LabelText>Podaj walutę docelową: </LabelText>\r\n                    <Select\r\n                        value={newTargetCurrency}\r\n                        onChange={({ target }) => setNewTargetCurrency(target.value)}\r\n                        required\r\n                    >\r\n                        {currencyList.map((currency => (\r\n                            <option\r\n                                key={currency}\r\n                                value={currency}\r\n                            >\r\n                                {currency}\r\n                            </option>\r\n                        )))}\r\n                    </Select>\r\n                </Label>\r\n            </Fieldset>\r\n\r\n            <Button>Przelicz!</Button>\r\n\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: 20px auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n    margin: 5px;\r\n    text-align: center;  \r\n`;\r\n\r\nexport const ResultParagraph = styled.p`\r\n    text-align: center;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const ResultText = styled.span`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: ${({ theme }) => theme.colors.primaryColor};\r\n    transition: color 0.2s linear;\r\n\r\n    && {    \r\n        ${(props) => props.highlighted && css`\r\n            color: hsl(340, 90%, 45%);\r\n        `}\r\n    }\r\n\r\n    && {    \r\n        ${(props) => props.highlighted && css`\r\n            color: hsl(340, 90%, 45%);\r\n        `}\r\n    }\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { Section, Header, ResultParagraph, ResultText } from \"./styled\";\r\n\r\nconst ResultSection = ({ amount, currency, rate, clickCounter }) => {\r\n\r\n    const [checkValue, setCheckValue] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCheckValue(true);\r\n        setTimeout(() => {\r\n            setCheckValue(false);\r\n        }, 1000);\r\n    }, [clickCounter]);\r\n\r\n    const calculateResult = () => (amount * rate).toFixed(2);\r\n\r\n    return (\r\n        <Section>\r\n            <Header>Wynik:</Header>\r\n            <ResultParagraph>\r\n                <ResultText highlighted={checkValue}>\r\n                    {`${amount} PLN = `}\r\n                </ResultText>\r\n                <ResultText highlighted={checkValue}>\r\n                    {` ${calculateResult()} ${currency}`}\r\n                </ResultText>\r\n            </ResultParagraph>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default ResultSection;","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const LoadingText = styled.p`\r\n    padding: 10px;\r\n`;","import Timer from \"../Timer\";\r\nimport { Section, LoadingText } from \"./styled\";\r\n\r\nconst LoadingScreen = () => {\r\n\r\n    return (\r\n        <Section>\r\n            <Timer />\r\n            <LoadingText>\r\n                Moja aplikacja przeczesuje dla Ciebie internet w poszukiwaniu najświeższych kursów walut.\r\n            </LoadingText>\r\n            <LoadingText>\r\n                Może to potrwać kilka sekund. 😎\r\n            </LoadingText>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default LoadingScreen;","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    background-color: ${({ theme }) => theme.colors.backgroundColor};\r\n    border: 1px solid ${({ theme }) => theme.colors.primaryColor};\r\n    border-radius: 5px;\r\n    box-shadow: 5px 5px 5px hsl(0, 0%, 20%);\r\n    padding: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => (theme.breakPoints.mobile)}px) {\r\n        box-shadow: 2px 2px 2px hsl(0, 0%, 20%);\r\n    }\r\n`;\r\n\r\nexport const ErrorText = styled.p`\r\n    padding: 10px;\r\n`;","import Timer from \"../Timer\";\r\nimport { Section, ErrorText } from \"./styled\";\r\n\r\nconst ErrorScreen = () => {\r\n\r\n    return (\r\n        <Section>\r\n            <Timer />\r\n            <ErrorText>\r\n                Aplikacja nie działa poprawnie. 😭\r\n            </ErrorText>\r\n            <ErrorText>\r\n                Sprawdź połączenie z internetem.\r\n            </ErrorText>\r\n            <ErrorText>\r\n                Jeśli internet działa, to problem musi być po naszej stronie. Postaramy się usunąć usterkę jak najszybciej.\r\n            </ErrorText>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default ErrorScreen;","import React, { useState } from 'react';\nimport Header from './Header';\nimport { Container } from './Container';\nimport InfoSection from './InfoSection';\nimport Form from './Form';\nimport ResultSection from './ResultSection';\nimport LoadingScreen from './LoadingScreen';\nimport ErrorScreen from './ErrorScreen';\nimport { useCurrencyData } from './useCurrencyData';\n\nfunction App() {\n\n  const { currenciesData } = useCurrencyData();\n  const [amount, setAmount] = useState(1);\n  const [currency, setCurrency] = useState(\"EUR\");\n  const [clickCounter, setClickCounter] = useState(0);\n\n  let rate = (currenciesData.status === \"succes\" ? currenciesData.rates[currency] : 1);\n\n  const getNewAmountValue = (newAmountValue) => {\n    setAmount(newAmountValue);\n  };\n\n  const getNewTargetCurrencyValue = (newTargetCurrencyValue) => {\n    setCurrency(newTargetCurrencyValue);\n  };\n\n  const getNewClickCounterValue = (newClickCounterValue) => {\n    setClickCounter(newClickCounterValue);\n  };\n\n  if (currenciesData.status === \"loading\")\n    return (\n      <>\n        <Header />\n        <Container>\n          <LoadingScreen />\n        </Container>\n      </>\n    );\n  else if (currenciesData.status === \"error\")\n    return (\n      <>\n        <Header />\n        <Container>\n          <ErrorScreen />\n        </Container>\n      </>\n    );\n  else {\n    return (\n      <>\n        <Header />\n        <Container>\n          <InfoSection\n            currenciesData={currenciesData}\n          />\n          <Form\n            currenciesData={currenciesData}\n            getNewAmountValue={getNewAmountValue}\n            getNewTargetCurrencyValue={getNewTargetCurrencyValue}\n            getNewClickCounterValue={getNewClickCounterValue}\n          />\n          <ResultSection\n            amount={amount}\n            currency={currency}\n            rate={rate}\n            clickCounter={clickCounter}\n          />\n        </Container>\n      </>\n    );\n  }\n};\n\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrencyData = () => {\r\n\r\n    const initialData = {\r\n        rates: null,\r\n        date: null,\r\n        status: \"loading\",\r\n    };\r\n\r\n    const [currenciesData, setCurrenciesData] = useState(initialData);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch(\"https://api.exchangerate.host/latest?base=PLN\")\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(response.statusText);\r\n                    }\r\n                    return response;\r\n                })\r\n                .then(response => response.json())\r\n                .then(response => setCurrenciesData({\r\n                    rates: response.rates,\r\n                    date: response.date,\r\n                    status: \"succes\",\r\n                }))\r\n                .catch(error => {\r\n                    setCurrenciesData({ status: (\"error\") })\r\n                    console.log(error)\r\n                });\r\n        }, 2000);\r\n    }, []);\r\n\r\n    return { currenciesData }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        primaryColor: \"hsl(240, 100%, 25%)\",\r\n        backgroundColor: \"hsl(40, 100%, 97%)\",\r\n        invalidColor: \"hsl(0, 100%, 80%)\",\r\n        requiredColor: \"hsl(60, 100%, 80%)\",\r\n        borderColor: \"hsl(0, 0%, 53%)\",\r\n    },\r\n    breakPoints: {\r\n        mobile: 660,\r\n    },\r\n};"],"sourceRoot":""}