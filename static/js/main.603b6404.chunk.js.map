{"version":3,"sources":["Header/index.js","Container/index.js","Timer/index.js","InfoSection/index.js","Form/index.js","ResultSection/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Container","children","Timer","useState","Date","currentTime","setTime","useEffect","intervalId","setInterval","clearInterval","timer","toLocaleString","weekday","day","month","hour","minute","second","InfoSection","Form","properRating","getNewAmountValue","getNewTargetCurrency","getNewBaseCurrency","newAmountValue","setNewAmountValue","newBaseCurrency","setNewBaseCurrency","newTargetCurrency","setNewTargetCurrency","onSubmit","event","preventDefault","type","value","onChange","target","step","min","max","required","ResultSection","calculateCurrency","amount","baseCurrency","targetCurrency","App","setAmount","setBaseCurrency","setTargetCurrency","rating","filter","currencyPairRating","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.603b6404.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = () => (\r\n    <header>\r\n        <h1 className=\"header\">Kalkulator walut</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Timer = () => {\r\n\r\n    const [currentTime, setTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    const timer = currentTime.toLocaleString(\"pl\", {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\n    return (\r\n        <span className=\"timer\">Dzisiaj jest {timer} </span>\r\n    );\r\n};\r\n\r\nexport default Timer;","import \"./style.css\";\r\nimport Timer from \"../Timer\";\r\n\r\nconst InfoSection = () => {\r\n\r\n    return (\r\n        < section className=\"infoSection\" >\r\n            <Timer />\r\n            <ul className=\"infoSection__unorderedList\">\r\n                <li className=\"infoSection__listItem\">\r\n                    Kalkulator przelicza wartość waluty po kursie średnim z dnia 24.06.2021.\r\n                </li>\r\n                <li className=\"infoSection__listItem\">\r\n                    Pola wymagane są oznaczone kolorem żółtym:\r\n                    <span className=\"infoSection__requiredColor\"></span>\r\n                </li>\r\n                <li className=\"infoSection__listItem\">\r\n                    Pola błędnie wypełnione są oznaczone kolorem czerwonym:\r\n                    <span className=\"infoSection__invalidColor\"></span>\r\n                </li>\r\n            </ul>\r\n        </section >\r\n    );\r\n};\r\n\r\nexport default InfoSection;","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ properRating, getNewAmountValue, getNewTargetCurrency, getNewBaseCurrency, }) => {\r\n\r\n    const [newAmountValue, setNewAmountValue] = useState(1.00);\r\n    const [newBaseCurrency, setNewBaseCurrency] = useState(\"PLN\");\r\n    const [newTargetCurrency, setNewTargetCurrency] = useState(\"EUR\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getNewAmountValue(newAmountValue);\r\n        getNewBaseCurrency(newBaseCurrency);\r\n        getNewTargetCurrency(newTargetCurrency);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} >\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Przelicznik walut</legend>\r\n\r\n                <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">Podaj kwotę do przeliczenia:</span>\r\n                    <input\r\n                        className=\"form__numberField\"\r\n                        type=\"number\"\r\n                        value={newAmountValue}\r\n                        onChange={({ target }) => setNewAmountValue(target.value)}\r\n                        step=\"0.01\"\r\n                        min=\"0.01\"\r\n                        max=\"1000000\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">Podaj walutę bazową:</span>\r\n                    <select\r\n                        className={`form__selectField ${properRating === 1 ? \"form__selectField--error\" : \"\"}`}\r\n                        value={newBaseCurrency}\r\n                        onChange={({ target }) => setNewBaseCurrency(target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"PLN\" >PLN</option>\r\n                        <option value=\"EUR\" >EUR</option>\r\n                        <option value=\"USD\" >USD</option>\r\n                    </select>\r\n                </label>\r\n\r\n                <label className=\"form__label\">\r\n                    <span className=\"form__labelText\">Podaj walutę docelową:</span>\r\n                    <select\r\n                        className={`form__selectField ${properRating === 1 ? \"form__selectField--error\" : \"\"}`}\r\n                        value={newTargetCurrency}\r\n                        onChange={({ target }) => setNewTargetCurrency(target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"PLN\" >PLN</option>\r\n                        <option value=\"EUR\" >EUR</option>\r\n                        <option value=\"USD\" >USD</option>\r\n                    </select>\r\n                </label>\r\n            </fieldset>\r\n\r\n            <button className=\"form__button\">Przelicz!</button>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst ResultSection = ({ calculateCurrency, amount, baseCurrency, targetCurrency }) => {\r\n\r\n    return (\r\n        <section className=\"resultSection\">\r\n            <h2 className=\"resultSection__header\">Wynik:</h2>\r\n            <p className=\"resultSection__resultBox\">\r\n                <span className=\"resultSection__resultText\">{amount} {baseCurrency} = </span>\r\n                <span className=\"resultSection__resultText\">{calculateCurrency()} {targetCurrency}</span>\r\n            </p>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default ResultSection;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Container from './Container';\nimport InfoSection from './InfoSection';\nimport Form from './Form';\nimport ResultSection from './ResultSection';\n\nfunction App() {\n\n  const [amount, setAmount] = useState(1.00);\n  const [baseCurrency, setBaseCurrency] = useState(\"PLN\");\n  const [targetCurrency, setTargetCurrency] = useState(\"EUR\");\n\n  const currencyPairRatings = [\n    { baseCurrency: \"PLN\", targetCurrency: \"EUR\", rating: 1 / 4.5302 },\n    { baseCurrency: \"EUR\", targetCurrency: \"PLN\", rating: 4.5302 },\n    { baseCurrency: \"PLN\", targetCurrency: \"USD\", rating: 1 / 3.7986 },\n    { baseCurrency: \"USD\", targetCurrency: \"PLN\", rating: 3.7986 },\n    { baseCurrency: \"USD\", targetCurrency: \"EUR\", rating: 1 / 1.1926 },\n    { baseCurrency: \"EUR\", targetCurrency: \"USD\", rating: 1.1926 },\n    { baseCurrency: \"PLN\", targetCurrency: \"PLN\", rating: 1 },\n    { baseCurrency: \"EUR\", targetCurrency: \"EUR\", rating: 1 },\n    { baseCurrency: \"USD\", targetCurrency: \"USD\", rating: 1 },\n  ];\n\n  const getNewAmountValue = (newAmountValue) => {\n    setAmount(newAmountValue);\n  };\n\n  const getNewBasetCurrency = (newBaseCurrency) => {\n    setBaseCurrency(newBaseCurrency);\n  };\n\n  const getNewTargetCurrency = (newTargetCurrency) => {\n    setTargetCurrency(newTargetCurrency);\n  };\n\n  const selectProperRating = (currencyPairRating) =>\n    (currencyPairRating.baseCurrency === baseCurrency && currencyPairRating.targetCurrency === targetCurrency);\n\n  const properRating = (currencyPairRatings.filter(selectProperRating)[0].rating);\n\n  const calculateCurrency = () => {\n    return (+amount * properRating).toFixed(2);\n  };\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <InfoSection />\n        <Form\n          properRating={properRating}\n          getNewAmountValue={getNewAmountValue}\n          getNewTargetCurrency={getNewTargetCurrency}\n          getNewBaseCurrency={getNewBasetCurrency}\n        />\n        <ResultSection\n          calculateCurrency={calculateCurrency}\n          amount={amount}\n          baseCurrency={baseCurrency}\n          targetCurrency={targetCurrency}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}